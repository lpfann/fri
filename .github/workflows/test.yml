name: pytest with poetry

on: [push]

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python     
      #----------------------------------------------
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      #----------------------------------------------
      #        load pip cache if cache exists      
      #----------------------------------------------
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip
          restore-keys: pip
      #----------------------------------------------
      #          install and run linters      
      #----------------------------------------------
      - run: python -m pip install black
      - run: |
          black . --check
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    #----------------------------------------------
    #       check-out repo and set-up python     
    #----------------------------------------------
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    #----------------------------------------------
    #  -----  install & configure poetry  -----      
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1.1.6
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    #----------------------------------------------
    #       load cached venv if cache exists      
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist 
    #----------------------------------------------
    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    - name: Test with pytest
      run: |
        poetry run pytest  -n 2 --cov .